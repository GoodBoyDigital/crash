{"version":3,"sources":["../../src/collision/circleVline.js"],"names":["circleVLine","temp","create","temp2","temp3","temp4","temp5","temp6","temp7","temp8","body1","circle","body2","line","success","fail","point1","add","position","start","point2","end","radius","face","sub","normal","y","x","normalize","circlePosition","linePosition","localCirclePosition","positionToProject","projectedCircle","project","dp1","dot","penetration","len","projection","s"],"mappings":"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","file":"circleVline.js","sourcesContent":["\nimport Vector from '../Vector';\n\nvar temp = Vector.create();\nvar temp2 = Vector.create();\nvar temp3 = Vector.create();\nvar temp4 = Vector.create();\nvar temp5 = Vector.create();\nvar temp6 = Vector.create();\nvar temp7 = Vector.create();\nvar temp8 = Vector.create();\n\nexport default function circleVLine(body1, circle, body2, line, success, fail)\n{\n\n\n    // hit test circle line!\n    var point1 = Vector.add(temp, line.position, line.start);\n    var point2 = Vector.add(temp2, line.position, line.end);\n\n    var radius = circle.radius;\n\n    var face = Vector.sub(temp3, point2, point1);\n\n    var normal = Vector.create(-face.y, face.x);\n    Vector.normalize(normal, normal);\n\n    var circlePosition = Vector.add(temp4, body1.position, circle.position);\n    var linePosition = Vector.add(temp5, body2.position, line.position);\n\n    var localCirclePosition = Vector.sub(temp6, circlePosition, linePosition);\n\n    var positionToProject = Vector.sub(temp7, localCirclePosition, point1);\n    var projectedCircle = Vector.project(temp8, positionToProject, normal);\n\n    var dp1 = Vector.dot(positionToProject, face);\n\n    if(dp1 < 0)\n    {\n        var penetration = Vector.len(positionToProject) - radius;\n        Vector.normalize(positionToProject, positionToProject)\n\n        if(penetration < 0)\n        {\n             success(body1,\n                    circle,\n                    body2,\n                    line,\n                    penetration,\n                    positionToProject)\n\n        }\n        else\n        {\n            fail(body1,\n                 circle,\n                 body2,\n                 line);\n        }\n\n        return;\n    }\n\n    positionToProject = Vector.sub(temp7, localCirclePosition, point2);\n    projectedCircle = Vector.project(temp8, positionToProject, normal);\n    dp1 = Vector.dot(positionToProject, face);\n\n    if(dp1 > 0)\n    {\n        var penetration = Vector.len(positionToProject) - radius;\n        Vector.normalize(positionToProject, positionToProject)\n\n        if(penetration < 0)\n        {\n            success(body1,\n                    circle,\n                    body2,\n                    line,\n                    penetration,\n                    positionToProject)\n            /// out //\n        }\n        else\n        {\n\n            fail(body1,\n                 circle,\n                 body2,\n                 line);\n        }\n\n        return;\n    }\n\n    var penetration = Vector.len(projectedCircle) - radius;\n\n    var projection = normal;//.clone(this.temp6);\n\n    // what size?\n    var s = ( point2.x - point1.x ) * ( localCirclePosition.y - point1.y) - (point2.y - point1.y) * (localCirclePosition.x - point1.x);\n    s = (s > 0) ? 1 : -1;\n\n    projection.x *= s;\n    projection.y *= s;\n\n    if(penetration < 0)\n    {\n        Vector.normalize(projection, projection);\n        success(body1,\n                circle,\n                body2,\n                line,\n                penetration,\n                projection)\n    }\n\n\n    fail(body1,\n         circle,\n         body2,\n         line);\n\n}\n"]}