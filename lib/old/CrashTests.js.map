{"version":3,"sources":["../../src/old/CrashTests.js"],"names":["define","require","exports","module","PIXI","Vector","CollisionTests","hitTestItemGroup","item","group","hitFunction","missFunction","itemsToHitTest","children","i","length","hitTestAABBAABB","hitTestItemItem","item2","hitTestGroup","j","hitTestGroupGroup","group2","itemsToHitTest2","body1","body","body2","rect1","shape","rect2","p1x","x","position","p1y","y","p2x","p2y","topDist","height","bottomDist","leftDist","width","rightDist","dist","penetrationLine","penetration"],"mappings":"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","file":"CrashTests.js","sourcesContent":["\ndefine(function (require, exports, module) \n{\n    var PIXI = require('PIXI');\n    var Vector = require('./Vector');\n\n    var CollisionTests = function()\n    {\n      \n    }\n\n\n    CollisionTests.hitTestItemGroup = function(item, group, hitFunction, missFunction)\n    {\n        var itemsToHitTest = group.children;\n\n        for (var i = 0; i < itemsToHitTest.length; i++) \n        {\n            CollisionTests.hitTestAABBAABB(item,  itemsToHitTest[i], hitFunction, missFunction);\n        };\n    }\n\n    CollisionTests.hitTestItemItem = function(item, item2, hitFunction, missFunction)\n    {\n        CollisionTests.hitTestAABBAABB(item,  item2, hitFunction, missFunction);\n    }\n\n    CollisionTests.hitTestGroup = function(group, hitFunction, missFunction)\n    {\n        var itemsToHitTest = group.children;\n\n        for (var i = 0; i < itemsToHitTest.length-1; i++) \n        {\n            for (var j = i+1; j < itemsToHitTest.length; j++) \n            {\n                CollisionTests.hitTestAABBAABB(itemsToHitTest[i],  itemsToHitTest[j], hitFunction, missFunction);\n            }\n        };\n    }\n\n    CollisionTests.hitTestGroupGroup = function(group, group2, hitFunction, missFunction)\n    {\n        var itemsToHitTest = group.children;\n        var itemsToHitTest2 = group2.children;\n\n        for (var i = 0; i < itemsToHitTest.length; i++) \n        {\n            for (var j = 0; j < itemsToHitTest2.length; j++) \n            {\n                CollisionTests.hitTestAABBAABB(itemsToHitTest[i],  itemsToHitTest2[j], hitFunction, missFunction);\n            }\n        };\n\n        CollisionTests.hitTestAABBAABB(item,  itemsToHitTest[i], hitFunction, missFunction);\n    }\n\n    CollisionTests.hitTestAABBAABB = function(item, item2, hitFunction, missFunction)\n    {\n        var body1 = item.body;\n        var body2 = item2.body;\n\n        var rect1 = body1.shape;\n        var rect2 = body2.shape;\n\n\n        var p1x = rect1.x + item.position.x;\n        var p1y = rect1.y + item.position.y;\n\n        var p2x = rect2.x + item2.position.x;\n        var p2y = rect2.y + item2.position.y;\n\n        var topDist =  (p1y + rect1.height) - p2y;\n        var bottomDist = (p2y + rect2.height) - p1y;\n\n        var leftDist = (p1x + rect1.width) - p2x;\n        var rightDist = (p2x + rect2.width) - p1x;\n\n        var dist = 999999;\n        \n        if(leftDist < dist)dist = leftDist;\n        if(rightDist < dist)dist = rightDist;\n        if(topDist < dist)dist = topDist;\n        if(bottomDist < dist)dist = bottomDist;\n\n        if(dist >= 0)\n        {\n            // hit!\n            var penetrationLine = new Vector();\n\n            if(dist == leftDist)\n            {\n                penetrationLine.x = -1;\n                penetrationLine.y = 0;\n            }\n            else if(dist == rightDist)\n            {\n                penetrationLine.x = 1;\n                penetrationLine.y = 0;\n            }\n            else if(dist == topDist)\n            {\n                penetrationLine.x = 0;\n                penetrationLine.y = -1;\n            }\n            else if(dist == bottomDist)\n            {\n                penetrationLine.x = 0;\n                penetrationLine.y = 1;\n            }\n\n            var penetration = -dist;\n\n            if(hitFunction)hitFunction(item, item2, penetration, penetrationLine)\n\n            //return new CollisonData(item, item2, penetration, penetrationLine, false);\n            //item.collisonReaction();\n        }\n        else\n        {\n            if(missFunction)missFunction(item, item2);\n\n            //return null;\n        }\n\n    }\n\n    module.exports = CollisionTests \n\n});"]}